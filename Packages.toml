skip = [
    "julia",
    "BugReporting", # nested rr is not supported

    # deprecated
    "NeuralNetDiffEq",
    "DiffEqBiological",
    "DiffEqMonteCarlo",
    "DiffEqPDEBase",
    "CUDAnative",
    "CUDAatomics",
    "CuArrays",
    "CUDAdrv",
    "CUDAapi",
    "AMDGPUnative",
    "ROCArrays",
    "GPUifyLoops",
    "UnitfulRecipes",

    # requires binaries
    "MATLAB",               # MATLAB
    "MATLABDiffEq",         # MATLAB
    "deSolveDiffEq",        # R
    "FEniCS",               # Docker
    "ClimateMachine",       # MPI
    "MPI",                  # MPI
    "BitemporalPostgres",   # POSTGRES

    # doing bad things
    # intentionally throwing a segfault
    "Run",
    # crashes not caused by Julia
    "ConnectFourSolver",    # artifact unsuited for julia#master
    "Minuit2",              #
    "Elemental",            # segfault in called library
    "Starlight",            #
    # doing bad stuff during precompilation
    "NewsLookout",          # writing to a file in the package dir
    # using a Cassette pass that generates invalid IR
    "Traceur",
    "IBMQJulia",
    # using overly complex types/tuples
    "Salsa",
    # sleep precision tests with tight upper bound
    "LoopThrottle",
    # generating malformed IR
    "StrideArraysCore",
    # invoking APIs incorrectly
    "CodeTransformation",
    # generating way too much output
    "OptimKit",
    # unsafe pointer handling
    "OIFITS",
    "ScanByte",

    # requires specific environment
    "AWSS3",                # AWS secrets
    "AWSCRT",               #
    "AWSTools",             #
    "LibAWSCRT",            #
    "AWS",                  #
    "GPUInspector",         # GPU hardware
    "CUDA",                 # CUDA hardware
    "cuTENSOR",             #
    "cuDNN",                #
    "NCCL",                 #
    "ArrayInterfaceCUDA",   #
    "NNlibCUDA",            #
    "BloqadeCUDA",          #
    "FoldsCUDA",            #
    "LinearSolveCUDA",      #
    "oneAPI",               # oneAPI hardware
    "AMDGPU",               # AMD GPU hardware
    "HSARuntime",
    "AdalmPluto",           # SDR hardware
    "RemoteHPC",            # server software
    "Metal",                # Apple hardware
    "ObjectiveC",           # macOS
]

# packages that are incompatible with running under rr
skip_rr = [
    "Plots",                        # hangs
    "BinaryBuilderBase",            # requires 32-bit rr
]

# packages that are important, and thus shouldn't ever be blacklisted
important = [
    "BenchmarkTools",
    "CodeTracking", # used by Revise
    "DataFrames",
    "DifferentialEquations",
    "Flux",
    "HTTP",
    "JuliaInterpreter",
    "JuMP",
    "LLVM",
    "LoweredCodeUtils", # used by Revise
    "Plots",
    "Revise",
    "PackageCompiler",

    # The following is the list of external stdlibs (excluding JLLs).
    # An external stdlib is a Julia stdlib that lives in an external repo (not the JuliaLang/julia repo).
    # Please keep this list up-to-date with https://github.com/JuliaLang/julia/tree/master/stdlib
    # You know it's an external stdlib if it has a `$name.version` file in that folder
    #
    # Motivation: We never want to blacklist external stdlibs, because after https://github.com/JuliaCI/julia-buildkite/pull/483,
    # PkgEval is the easiest way to test an external stdlib on your PR to JuliaLang/julia.
    "ArgTools",
    "DelimitedFiles",
    "Distributed",
    "Downloads",
    "JuliaSyntaxHighlighting",
    "LazyArtifacts",
    "LibCURL",
    "LinearAlgebra",
    "NetworkOptions",
    "Pkg",
    "SHA",
    "SparseArrays",
    "Statistics",
    "StyledStrings",
    "SuiteSparse",
    "Tar",
]

# packages that are slow, and should be granted more test time (they're worth it)
slow = [
    "PackageCompiler",
    "ChainRules"
]
